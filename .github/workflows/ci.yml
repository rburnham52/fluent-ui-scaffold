name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-test:
    name: Build and Test (.NET ${{ matrix.dotnet-version }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: ['6.0.x', '7.0.x', '8.0.x']
        include:
          - dotnet-version: '6.0.x'
            target-framework: 'net6.0'
          - dotnet-version: '7.0.x'
            target-framework: 'net7.0'
          - dotnet-version: '8.0.x'
            target-framework: 'net8.0'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Build
      run: dotnet build --no-restore --configuration Release --framework ${{ matrix.target-framework }}

    - name: Install Playwright browsers
      run: |
        cd tests/FluentUIScaffold.Playwright.Tests
        dotnet build --configuration Release --framework ${{ matrix.target-framework }}
        npx playwright@1.42.0 install chromium

    - name: Test with Coverage
      run: |
        dotnet test tests/FluentUIScaffold.Core.Tests/FluentUIScaffold.Core.Tests.csproj \
          --no-build \
          --verbosity normal \
          --configuration Release \
          --framework ${{ matrix.target-framework }} \
          --settings coverlet.runsettings \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage/ \
          --logger trx
        dotnet test tests/FluentUIScaffold.Playwright.Tests/FluentUIScaffold.Playwright.Tests.csproj \
          --no-build \
          --verbosity normal \
          --configuration Release \
          --framework ${{ matrix.target-framework }} \
          --settings coverlet.runsettings \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage/ \
          --logger trx

    - name: Generate Coverage Report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool --version 5.2.4
        echo "PATH=$PATH:$HOME/.dotnet/tools" >> $GITHUB_ENV
        reportgenerator \
          -reports:./coverage/**/coverage.cobertura.xml \
          -targetdir:./coverage/report \
          -reporttypes:Html

    - name: Check Coverage Threshold (>= 90%)
      run: |
        coverage=$(grep -o 'line-rate="[^"]*"' ./coverage/**/coverage.cobertura.xml | head -1 | sed 's/line-rate="//' | sed 's/"//')
        coverage_percent=$(echo "$coverage * 100" | bc -l | cut -d. -f1)
        echo "Coverage: ${coverage_percent}%"
        if [ "$coverage_percent" -lt 90 ]; then
          echo "❌ Coverage is below 90% threshold (${coverage_percent}%)"
          exit 1
        else
          echo "✅ Coverage meets 90% threshold (${coverage_percent}%)"
        fi

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-${{ matrix.target-framework }}
        path: |
          ./coverage/**/coverage.cobertura.xml
          ./coverage/report/
        retention-days: 30

  security:
    name: Security Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Run security analysis
      run: dotnet list package --vulnerable

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x

    - name: Run code analysis
      run: dotnet build --configuration Release --verbosity minimal

    - name: Run style analysis
      run: dotnet format --verify-no-changes                                                                                                                                                                